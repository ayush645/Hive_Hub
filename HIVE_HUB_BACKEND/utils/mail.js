require("dotenv/config");

const nodemailer = require("nodemailer");
const transporter = nodemailer.createTransport({
  host: "smtp.gmail.com",
  port: 465,
  secure: true,
  auth: {
    user: process.env.EMAIL, // Your email id or username
    pass: process.env.PASSWORD, // Your password
  },
  tls: {
    rejectUnauthorized: false,
  },
});

const sendEmail = async (email, inviteCode) => {
  const mailOptions = {
    from: process.env.EMAIL,
    to: email,
    subject: "Message from your account",
    text: inviteCode,
  };

  await transporter.sendMail(mailOptions);
};

const sendInviteEmail = async (email, name, inviteCode) => {
    const mailOptions = {
      from: `"HiveHub" <${process.env.EMAIL}>`,
      to: email,
      subject: "You're invited to join HiveHub üéâ",
      html: `
        <div style="font-family: Arial, sans-serif; padding: 20px;">
          <h2>You're Invited!</h2>
          <p>Hello ${name},</p>
          <p>You've been invited to join <strong>HiveHub</strong>. Use the invite code below to sign up:</p>
          <div style="font-size: 20px; font-weight: bold; margin: 20px 0;">
            ${inviteCode}
          </div>
          <p>This invite code is linked to your email <strong>${email}</strong> and can be used only once.</p>
          <p>Click below to get started:</p>
          <a href="${process.env.FRONTEND_URL}" style="display:inline-block; padding: 10px 20px; background:#007bff; color:#fff; text-decoration:none; border-radius:5px;">Sign Up</a>
          <p>Thanks,<br>HiveHub Team</p>
        </div>
      `
    };
  
    await transporter.sendMail(mailOptions);
  };

// const sendTicket = async (email, subject, query, name, ticketID) => {
//   const mailOptions = {
//     from: `"Team Blocktunix" <${process.env.EMAIL}>`,
//     to: email,
//     subject: "Ticket Created Successfully",
//     html: `
//       <html>
//         <head>
//           <style>
//             body {
//               font-family: Arial, sans-serif;
//               margin: 0;
//               padding: 0;
//               background-color: #cdff00;
//             }
//             .container {
//               max-width: 600px;
//               margin: 0 auto;
//               padding: 20px;
//               background-color:#D3D3D3;
//               border-radius: 5px;
//               box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
//             }
//             .header {
//               background-color: #cdff00;
//               color: #000;
//               padding: 10px 0;
//               text-align: center;
//             }
//             .content {
//               padding: 20px;
//             }
//             .signature {
//               text-align: center;
//               margin-top: 20px;
//             }
//           </style>
//         </head>
//         <body>
//           <div class="container">
//             <div class="header">
//               <h1>Ticket Created Successfully</h1>
//             </div>
//             <div class="content">
//               <p>Dear ${name},</p>
//               <p>We are pleased to inform you that your support ticket has been created successfully. Here are the details of your ticket:</p>
//               <p><strong>Ticket Subject:</strong> ${subject}</p>
//               <p><strong>Your Query:</strong> ${query}</p>
//               <p>Our support team will review your query and respond to you as soon as possible. You can expect a member of our team to contact you within 24 hours.</p>
//               <p>For your reference, here is your unique ticket ID: <strong>${ticketID}</strong>. Please keep this ID handy when communicating with our support team.</p>
//               <p>If you have any additional information to provide or need to update your query, please reply to this email with the necessary details, and we will be happy to assist you further.</p>
//               <p>This email is autogenerated, so please do not reply to this email address. If you have any urgent matters or questions, please visit our <a href="[Support Portal URL]">Support Portal</a> or contact our support team directly at +91 172 400 8203.</p>
//               <p>Thank you for choosing Team Apptunix for your support needs. We appreciate your business and look forward to assisting you.</p>
//             </div>
//             <div class="signature">
//               <p>Best regards,</p>
//               <p>Team Blocktunix</p>
//               <p>Apptunix Technologies Pvt Ltd</p>
//               <p>+91 172 400 8203</p>
//             </div>
//           </div>
//         </body>
//       </html>
//     `,
//   };

//   await transporter.sendMail(mailOptions);
// };  


// const sendTicketReply = async (email, subject, Name, adminName, queryReply) => {
//   const mailOptions = {
//     from: `"Team Blocktunix" <${process.env.EMAIL}>`,
//     to: email,
//     subject: `Re: ${subject}`,
//     html: `
//       <html>
//         <head>
//           <style>
//             body {
//               font-family: Arial, sans-serif;
//               background-color: #f4f4f4;
//               margin: 0;
//               padding: 0;
//             }
//             .container {
//               max-width: 600px;
//               margin: 0 auto;
//               padding: 20px;
//               background-color: #D3D3D3;
//               border-radius: 5px;
//               box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
//             }
//             .header {
//               background-color: #cdff00;
//               color: #000;
//               padding: 10px 0;
//               text-align: center;
//             }
//             .content {
//               padding: 20px;
//             }
//             .signature {
//               text-align: center;
//               margin-top: 20px;
//             }
//           </style>
//         </head>
//         <body>
//           <div class="container">
//             <div class="header">
//               <h1>Re: Ticket - ${subject}</h1>
//             </div>
//             <div class="content">
//               <p>Dear ${Name},</p>
//               <p>We hope this message finds you well.</p>
//               <p>Regarding your support ticket with the subject "${subject}," we wanted to update you on the status. Our support team has reviewed your query, and here is the response:</p>
//               <p> </strong> ${queryReply}</p>
//               <p>If you have any additional questions or need further assistance, please feel free to reply to this email. We are here to help.</p>
//               <p>Thank you for choosing Team Blocktunix for your support needs. We appreciate your business and value your satisfaction.</p>
//             </div>
//             <div class="signature">
//               <p>Best regards,</p>
//               <p>${adminName}</p>
//               <p>Apptunix Technologies Pvt Ltd</p>
//               <p>+91 172 400 8203</p>
//             </div>
//           </div>
//         </body>
//       </html>
//     `,
//   };

//   await transporter.sendMail(mailOptions);
// };

const sendOrderConfirmationEmail = async ({ to, name, orderId, items, totalAmount, shippingAddress }) => {
  const productRows = items.map(item => `
    <tr>
      <td style="padding: 8px; border: 1px solid #ddd;">${item.title}</td>
      <td style="padding: 8px; border: 1px solid #ddd;">${item.quantity}</td>
      <td style="padding: 8px; border: 1px solid #ddd;">‚Çπ${item.price}</td>
    </tr>
  `).join('');

  const addressBlock = `
    ${shippingAddress.street},<br/>
    ${shippingAddress.city}, ${shippingAddress.state}<br/>
    ${shippingAddress.country} - ${shippingAddress.zipCode}
  `;

  const html = `
    <div style="font-family: Arial, sans-serif; color: #333;">
      <h2 style="color: #2e6da4;">Thank you for your order, ${name}!</h2>
      <p>Your order <strong>#${orderId}</strong> has been confirmed.</p>

      <h3>Order Summary:</h3>
      <table style="width: 100%; border-collapse: collapse;">
        <thead>
          <tr style="background-color: #f4f4f4;">
            <th style="padding: 8px; border: 1px solid #ddd;">Product</th>
            <th style="padding: 8px; border: 1px solid #ddd;">Qty</th>
            <th style="padding: 8px; border: 1px solid #ddd;">Price</th>
          </tr>
        </thead>
        <tbody>
          ${productRows}
        </tbody>
      </table>

      <p><strong>Total Paid:</strong> ‚Çπ${totalAmount}</p>

      <h3>Shipping Address:</h3>
      <p>${addressBlock}</p>

      <p style="margin-top: 20px;">We‚Äôll notify you once your order is shipped.</p>
      <p>Thank you for shopping with us! üõçÔ∏è</p>
    </div>
  `;

  await transporter.sendMail({
    from: `"HiveHub" <${process.env.EMAIL}>`,
    to,
    subject: `Your Order Confirmation ‚Äì Order #${orderId}`,
    html,
  });
};

const sendOrderStatusConfirmation = async ({
  to,
  name,
  orderId,
  deliveryStatus,  // <-- pass this
  totalAmount,
  shippingAddress,
  items
}) => {
  const productList = items.map(item => `
    <tr>
      <td style="padding: 8px; border: 1px solid #ddd;">${item.title}</td>
      <td style="padding: 8px; border: 1px solid #ddd;">${item.quantity}</td>
      <td style="padding: 8px; border: 1px solid #ddd;">‚Çπ${item.price}</td>
    </tr>
  `).join('');

  const html = `
    <div style="font-family: Arial, sans-serif; color: #333; line-height: 1.6;">
      <h2 style="color: #007bff;">üöö Order Status Update</h2>
      <p>Hi ${name},</p>

      <p>Your order <strong>#${orderId}</strong> has been updated.</p>

      <p><strong>Your order is now:</strong> 
        <span style="color: #28a745; font-weight: bold;">${deliveryStatus.toUpperCase()}</span>
      </p>

      <h3>üõí Order Items:</h3>
      <table style="width: 100%; border-collapse: collapse;">
        <thead>
          <tr style="background-color: #f8f8f8;">
            <th style="padding: 8px; border: 1px solid #ccc;">Product</th>
            <th style="padding: 8px; border: 1px solid #ccc;">Qty</th>
            <th style="padding: 8px; border: 1px solid #ccc;">Price</th>
          </tr>
        </thead>
        <tbody>${productList}</tbody>
      </table>

      <p><strong>Total Paid:</strong> ‚Çπ${totalAmount}</p>

      <h3>üì¶ Shipping Address:</h3>
      <p>${shippingAddress}</p>

      <p>Thank you for shopping with us! We'll keep you posted on the next steps.</p>

      <p style="color: #888;">‚Äî The Store Team</p>
    </div>
  `;
  await transporter.sendMail({
    from:`"HiveHub" <${process.env.EMAIL}>`,
    to,
    subject: `Order #${orderId} ‚Äì Status: ${deliveryStatus.toUpperCase()}`,
    html
  });
};


module.exports = { sendEmail, sendInviteEmail,sendOrderConfirmationEmail,sendOrderStatusConfirmation };
